
server:
  port: 30150

spring:
  application:
    name: cloud-alibaba-gateway
  cloud:
    # 网关路由第一种配置方式
    gateway:
      # 开启从注册中心动态创建路由的功能，利用微服务名进行路由
      discovery:
        locator:
          enabled: true
      routes:
        # 路由的 ID，没有固定规则但要求唯一，建议使用服务名
        - id: cloud-alibaba-order
          # 匹配后提供服务的路由地址，lb 是表示启用 gateway 自身的负载均衡功能
          # lb://servicename 是 gateway 在微服务中自动创建的负载均衡 uri
          uri: lb://cloud-alibaba-order
          # 断言，路径相匹配的才进行路由
          predicates:
            - path=/order/**

            # 加上过滤条件，即在什么时间之后，此断言才生效。可打印 ZonedDateTime.now() 获得
            # 类似的配置还有 before，between（两个时间串，以逗号分隔）
            - After=2020-02-10T16:06:33.485+08:00[Asia/shanghai]

            # 此断言需要两个参数，cookie name，正则表达式。路由规则会获取对应的这两个参数进行匹配，
            # 匹配上就路由（cookie 为 cname=hyman），反之就不执行路由
            - Cookie=cname,hyman

            # 此断言需要两个参数，属性名称，正则表达式。路由规则同 Cookie，
            # 匹配上就路由（header 为 cname:正整数），反之就不执行路由
            - Header=cname,\d+

            # 此断言需要两个参数，属性名称，正则表达式。路由规则同 Cookie，规则是（header 为 cname:正整数）
            - Header=cname,\d+

            # 此断言需要一组需要匹配的域名列表参数，以逗号分隔。匹配的是参数中的主机域名地址。
            # 规则是（header 为 Host:www.hyman.com），反之就不执行路由
            - Host=*.hyman.com

        - id: cloud-alibaba-product
          uri: lb://cloud-alibaba-product
          predicates:
            - path=/product/**

          # 过滤器分为前置和后置（pre，post），全局和自定义（GlobalFilter ，GatewayFilter ）。
          filters:
            # 在匹配的请求头中加入一个请求头，即 request-id:hyman
            - AddRequestParameter=request-id,hyman

#  cloud:
#    gateway:
#      routes:
#        - id: cloud-alibaba-order
#          # 匹配后提供服务的路由地址
#          uri: http://localhost:30157
#          predicates:
#            - path=/order/**
#
#        - id: cloud-alibaba-product
#          uri: http://localhost:30159
#          predicates:
#            - path=/product/**


  # 设置上传文件大小
  servlet:
    multipart:
      enabled: true
      max-file-size: 300MB
      max-request-size: 350MB

  # 但对于大型文件，可以使用 /gate/*，该路径会绕过 Spring DispatcherServlet 来进行文件上传（因为通常所有的请求都会被主控制器接收并分配）。
  # 即在使用 gate 进行转发本服务进行文件上传时，可使用 gateIP:port/gate/本服务application-name（或自定义的映射路径）/uploadpath 即可。
  # 换句话说，如果您有 gate.routes.customers=/customers/**，那么您可以将大文件发布到/gate/customers/*。servlet路径通过gate.servlet path外部化。如果代理路由带您通过功能区负载平衡器，则超大文件还需要提升超时设置

  profiles:
    active: dev

feign:
  compression:
    request:
      enabled: true
      mime-types: text/xml,application/xml,application/json
      min-request-size: 2048
    response:
      enabled: true


# 通过配置文件可特殊指定‘某一提供者’的负载均衡算法，而不再需要进行编码。
# 优先级为：配置文件 》 RibbonClient 注解代码 》 cloud 默认的配置。
microservice-config-dept-client:
  ribbon:
    NIWSServerListClassName: com.netflix.loadbalancer.ConfigurationBasedServerList
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule

