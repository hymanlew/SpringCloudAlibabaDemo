server:
  port: 3344

spring:
  application:
#   这个名字很重要，是注册到注册中心必须用到的，也是服务发现时用到的名字。并且必须要对外显露统一的服务实例名称，不能更改。
    name: cloud-sentinel-client

  rabbitmq:
    host: localhost
    port: 5672
    username: hyman
    password: hyman

  # Spring Cloud 将其规范化的定义都抽象到了 SpringCloud-Common 包中，即是统一的标准化操作流程（定义了接口），如服务注册流程，发
  # 现流程。其实现及自动装配信息，都包含在了 SpringCloud-Common 包下 META-INF/spring.factories 文件中。
  # 而 dubbo 集成 nacos 时，服务注册依托的是 Dubbo 中的自动装配机制。是在 spring-cloud-alibaba-dubbo 下 META-INF/spring.factories
  # 文件中。所以不需要单独创建配置一个 Nacos 模块项目。
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848

    sentinel:
      transport:
        # sentinel dashboard 单机服务器，单独从官网下载解压并运行，默认端口就是 8080
        dashboard: localhost:8080
        # 默认 8719 端口，若被占用会自动从 8719 依次加 1 扫描，直到找到未占用的端口
        port: 8719

      # 目前 sentinel 规则持久化支持 Consul，zookeeper，redis，nacos，apollo，etcd 等数据源的扩展。用什么类型的数据源配相应的 key 即可
      datasource:
        - nacos:
            server-addr: 192.168.218.128：8848
            # 区分不同应用的配置
            data-id: {spring.application.name}-sentinel
            group_id: DEFAULT_GROUP
            # 指定配置项的内容格式，sentinel 提供了 json，xml 两种格式。如需自定义，可将值配置为 custom，并配置 converter-class 指向 converter 类
            data-type: json
            # 表示数据源中的规则是哪种类型，有 flow，degrade，param-flow，gw-flow 等
            rule-type: flow

dubbo:
  cloud:
    subscribed-services: microservice-provider-dept
  scan:
    base-packages: com.hyman.consumerdept80

# 暴露所有的请求，以用于监控
management:
  endpoints:
    web:
      exposure:
        include: '*'